package org.korso.apps.rsscursoandroid.data;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.UriMatcher;
import android.database.Cursor;
import android.net.Uri;

public class FeedsContentProvider extends ContentProvider{

	private MyDbHelper mDbHelper;
	public static final int TYPE_FEEDS_COLLECTION = 1;
	public static final int TYPE_FEEDS_ITEM = 2;

	public static final UriMatcher sUriMatcher;
	
	static{
		sUriMatcher = new UriMatcher(UriMatcher.NO_MATCH);
		sUriMatcher.addURI(FeedsContract.AUTHORITY, "feeds", TYPE_FEEDS_COLLECTION);
		sUriMatcher.addURI(FeedsContract.AUTHORITY, "feeds/#", TYPE_FEEDS_ITEM);
	}
	
	@Override
	public int delete(Uri uri, String selection, String[] selectionArgs) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getType(Uri uri) {

		switch(sUriMatcher.match(uri))
		case TYPE_FEEDS_COLLECTION:
			return "android.cursor.dir/vnd.org.korso.apps.feedscontentprovider";
		case TYPE_FEEDS_ITEM: 
			return "android.cursor.item/vnd.org.korso.apps.feedscontentprovider";
		default:
			return;
			
		return null;
	}

	@Override
	public Uri insert(Uri uri, ContentValues values) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean onCreate() {
		mDbHelper = new MyDbHelper(getContext());
		return true;
	}

	@Override
	public Cursor query(Uri uri, String[] projection, String selection,
			String[] selectionArgs, String sortOrder) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int update(Uri uri, ContentValues values, String selection,
			String[] selectionArgs) {
		// TODO Auto-generated method stub
		return 0;
	}

	
}
